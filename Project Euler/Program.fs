// Learn more about F# at http://fsharp.net
// See the 'F# Tutorial' project for more help.

(*
Problem 1:

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
*)
let problem1 = 
    [1..999]
    |> List.filter (fun x -> x % 3 = 0 || x % 5 = 0)
    |> List.sum

(*
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)
let problem2 =
    let rec fib x y =
        match y with
            | y when y > 4000000 -> 0
            | y when y % 2 = 0 -> y + fib y (x+y)
            | _ -> fib y (x+y) 
    fib 1 2

(*
Problem 5

2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
*)
let problem5 = 
    Seq.initInfinite (fun x -> x * 20)
    |> Seq.filter (fun x -> x % 19 = 0 && x % 18 = 0 && x % 17 = 0 && x % 16 = 0 && x % 15 = 0 && x % 14 = 0 && x % 13 = 0 && x % 12 = 0 && x % 11 = 0)
    |> Seq.take 2
    |> Seq.last

(*
Problem 6



The sum of the squares of the first ten natural numbers is,
12 + 22 + ... + 102 = 385

The square of the sum of the first ten natural numbers is,
(1 + 2 + ... + 10)2 = 552 = 3025

Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
*)
let problem6 = 
    let sumOfSquares = 
        Seq.unfold (fun x -> x*x) 1
        |> Seq.take 100
        |> Seq.sum



[<EntryPoint>]
let main argv = 
    printfn "%A" argv
    printfn "Hello world and proj\ect Euler"
    printfn "Problem 1: %d" problem1
    printfn "Problem 2: %d" problem2 
    printfn "Problem 5: %d" problem5
    System.Console.ReadKey() |> ignore
    0 // return an integer exit code