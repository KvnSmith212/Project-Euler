// Learn more about F# at http://fsharp.net
// See the 'F# Tutorial' project for more help.

(*
Problem 1:

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
*)
let problem1 = 
    [1..999]
    |> List.filter (fun x -> x % 3 = 0 || x % 5 = 0)
    |> List.sum

(*
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)
let problem2 =
    let rec fib x y =
        match y with
            | y when y > 4000000 -> 0
            | y when y % 2 = 0 -> y + fib y (x+y)
            | _ -> fib y (x+y) 
    fib 1 2

(*
Problem 3

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*)

[<EntryPoint>]
let main argv = 
    printfn "%A" argv
    printfn "Hello world and project Euler"
    printfn "Problem 1: %d" problem1
    printfn "Problem 2: %d" problem2 
    //printfn "Better Problem 2: %d" improved2 4000000
    System.Console.ReadKey() |> ignore
    0 // return an integer exit code